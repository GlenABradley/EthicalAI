============================= test session starts =============================
platform win32 -- Python 3.12.10, pytest-8.2.0, pluggy-1.6.0 -- C:\Users\glen4\AppData\Local\Programs\Python\Python312\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\glen4\Code\EthicalAI2\EthicalAI
configfile: pytest.ini
plugins: anyio-4.10.0, asyncio-1.1.0, cov-6.2.1
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
collecting ... collected 99 items

tests/api/test_frames_endpoints.py::test_frames_index_empty_ok 
------------------------------- live log setup --------------------------------
INFO     sentence_transformers.SentenceTransformer:SentenceTransformer.py:227 Load pretrained SentenceTransformer: all-MiniLM-L6-v2
PASSED                                                                   [  1%]
tests/api/test_frames_endpoints.py::test_frames_search_and_trace_empties PASSED [  2%]
tests/api/test_frames_index_contracts.py::test_index_wrong_coords_length_422 PASSED [  3%]
tests/api/test_frames_index_contracts.py::test_index_missing_pack_no_active_400 PASSED [  4%]
tests/api/test_frames_index_contracts.py::test_index_empty_frames_with_pack_returns_k_and_zero_ingested FAILED [  5%]
tests/api/test_frames_stats.py::test_frames_stats_ok PASSED              [  6%]
tests/api/test_payload_limits.py::test_analyze_payload_limit_413 FAILED  [  7%]
tests/memory/test_store_stubs.py::test_store_put_and_k_infer_and_stubs PASSED [  8%]
tests/test_advanced_axis_integration.py::test_advanced_axis_resonance PASSED [  9%]
tests/test_api.py::test_health_ready PASSED                              [ 10%]
tests/test_api_endpoints.py::test_resonance_with_vectors PASSED          [ 11%]
tests/test_api_endpoints.py::test_pipeline_analyze_with_vectors PASSED   [ 12%]
tests/test_api_endpoints.py::test_embed_endpoint_smoke PASSED            [ 13%]
tests/test_app_imports.py::test_app_importable PASSED                    [ 14%]
tests/test_axes_activate_thresholds.py::test_activate_reads_thresholds PASSED [ 15%]
tests/test_axes_orthonormal.py::test_gram_schmidt_orthonormal PASSED     [ 16%]
tests/test_axis_pack.py::test_axis_pack_builds_and_is_orthonormal PASSED [ 17%]
tests/test_axis_pack_384d.py::test_384d_axis_pack PASSED                 [ 18%]
tests/test_axis_packs_comprehensive.py::TestAxisPacksComprehensive::test_all_axis_packs_structure PASSED [ 19%]
tests/test_axis_packs_comprehensive.py::TestAxisPacksComprehensive::test_consequentialism_axis_pack PASSED [ 20%]
tests/test_axis_packs_comprehensive.py::TestAxisPacksComprehensive::test_deontology_axis_pack PASSED [ 21%]
tests/test_axis_packs_comprehensive.py::TestAxisPacksComprehensive::test_virtue_ethics_axis_pack PASSED [ 22%]
tests/test_axis_packs_comprehensive.py::TestAxisPacksComprehensive::test_cross_axis_ethical_analysis PASSED [ 23%]
tests/test_axis_packs_comprehensive.py::TestAxisPacksComprehensive::test_axis_pack_examples_quality PASSED [ 24%]
tests/test_axis_packs_comprehensive.py::TestAxisPacksComprehensive::test_ethical_evaluation_consistency PASSED [ 25%]
tests/test_axis_packs_comprehensive.py::TestEthicalEvaluationPipeline::test_full_pipeline_workflow PASSED [ 26%]
tests/test_axis_packs_comprehensive.py::TestEthicalEvaluationPipeline::test_vector_topology_ethical_mapping PASSED [ 27%]
tests/test_axis_packs_comprehensive.py::TestEthicalEvaluationPipeline::test_real_world_ethical_scenarios PASSED [ 28%]
tests/test_calibrate_cli.py::test_calibrate_cli_runs_and_writes_reports FAILED [ 29%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_health_check_comprehensive PASSED [ 30%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_text_embedding_functionality PASSED [ 31%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_axis_pack_loading FAILED [ 32%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_ethical_evaluation_pipeline PASSED [ 33%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_batch_ethical_analysis PASSED [ 34%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_complex_ethical_scenarios PASSED [ 35%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_what_if_analysis PASSED [ 36%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_vector_topology_analysis PASSED [ 37%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_performance_large_inputs PASSED [ 38%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_error_handling PASSED [ 39%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_axis_configuration PASSED [ 40%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_resonance_analysis PASSED [ 41%]
tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_pipeline_integration PASSED [ 42%]
tests/test_comprehensive_e2e.py::TestEthicalAIIntegration::test_end_to_end_ethical_workflow PASSED [ 43%]
tests/test_comprehensive_e2e.py::TestEthicalAIIntegration::test_cross_axis_consistency PASSED [ 44%]
tests/test_constitution_rank.py::test_rank_prefers_no_veto_then_composite_then_logprob FAILED [ 45%]
tests/test_constitution_rank.py::test_axis_composite_meaningful PASSED   [ 46%]
tests/test_diffusion.py::test_energy_decreases_with_tau PASSED           [ 47%]
tests/test_end_to_end.py::test_health_check PASSED                       [ 48%]
tests/test_end_to_end.py::test_embed_endpoint PASSED                     [ 49%]
tests/test_end_to_end.py::test_analyze_endpoint PASSED                   [ 50%]
tests/test_end_to_end.py::test_batch_analysis PASSED                     [ 51%]
tests/test_end_to_end.py::test_whatif_analysis PASSED                    [ 52%]
tests/test_eval_api.py::test_eval_text_flow PASSED                       [ 53%]
tests/test_eval_spans.py::test_project_scores_shapes PASSED              [ 54%]
tests/test_frames_logic.py::test_srl_lite_and_vectorize_deterministic PASSED [ 55%]
tests/test_frames_logic.py::test_three_valued_logic_tables PASSED        [ 56%]
tests/test_frontend_integration.py::TestFrontendBackendIntegration::test_api_endpoints_for_frontend PASSED [ 57%]
tests/test_frontend_integration.py::TestFrontendBackendIntegration::test_cors_configuration PASSED [ 58%]
tests/test_frontend_integration.py::TestFrontendBackendIntegration::test_api_response_format PASSED [ 59%]
tests/test_frontend_integration.py::TestFrontendBackendIntegration::test_error_response_format PASSED [ 60%]
tests/test_frontend_integration.py::TestFrontendBackendIntegration::test_batch_processing_for_ui PASSED [ 61%]
tests/test_frontend_integration.py::TestFrontendBackendIntegration::test_real_time_analysis_simulation PASSED [ 62%]
tests/test_frontend_integration.py::TestUIComponentDataFlow::test_interaction_page_workflow PASSED [ 63%]
tests/test_frontend_integration.py::TestUIComponentDataFlow::test_visualization_data_format PASSED [ 64%]
tests/test_frontend_integration.py::TestUIComponentDataFlow::test_ethical_axis_data_structure PASSED [ 65%]
tests/test_frontend_integration.py::TestUIComponentDataFlow::test_performance_for_interactive_ui PASSED [ 66%]
tests/test_frontend_integration.py::TestAPIContractCompliance::test_embedding_api_contract PASSED [ 67%]
tests/test_frontend_integration.py::TestAPIContractCompliance::test_health_api_contract PASSED [ 68%]
tests/test_frontend_integration.py::TestAPIContractCompliance::test_error_handling_contract PASSED [ 69%]
tests/test_health_ready.py::test_health_ready_fast PASSED                [ 70%]
tests/test_interaction_api.py::test_interaction_allow_path PASSED        [ 71%]
tests/test_interaction_refusal.py::test_interaction_refusal_and_alternatives PASSED [ 72%]
tests/test_minimal.py::test_minimal PASSED                               [ 73%]
tests/test_openapi_generates.py::test_openapi_generation PASSED          [ 74%]
tests/test_performance.py::test_embed_endpoint_performance PASSED        [ 75%]
tests/test_performance.py::test_analyze_endpoint_performance PASSED      [ 76%]
tests/test_performance.py::test_concurrent_requests FAILED               [ 77%]
tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_single_embedding_performance PASSED [ 78%]
tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_batch_embedding_performance PASSED [ 79%]
tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_concurrent_request_handling PASSED [ 80%]
tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_large_text_performance PASSED [ 81%]
tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_memory_usage_stability PASSED [ 82%]
tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_error_recovery_performance FAILED [ 83%]
tests/test_performance_benchmarks.py::TestStressTests::test_rapid_fire_requests PASSED [ 84%]
tests/test_performance_benchmarks.py::TestStressTests::test_edge_case_inputs PASSED [ 85%]
tests/test_pipeline_shapes.py::test_orchestrator_shapes PASSED           [ 86%]
tests/test_policy_loader.py::test_policy_loader_defaults PASSED          [ 87%]
tests/test_real_encoder.py::TestRealEncoderFunctionality::test_real_embedding_functionality PASSED [ 88%]
tests/test_real_encoder.py::TestRealEncoderFunctionality::test_real_axis_pack_creation_and_analysis PASSED [ 89%]
tests/test_real_encoder.py::TestRealEncoderFunctionality::test_real_health_check PASSED [ 90%]
tests/test_real_encoder.py::TestRealEncoderFunctionality::test_real_what_if_analysis PASSED [ 91%]
tests/test_real_encoder.py::TestRealEncoderFunctionality::test_real_error_handling PASSED [ 92%]
tests/test_regularizer.py::test_regularizer_numpy_basic PASSED           [ 93%]
tests/test_resonance.py::test_resonance_linear_weights_deterministic PASSED [ 94%]
tests/test_resonance.py::test_resonance_choquet_two_axes PASSED          [ 95%]
tests/test_simple.py::test_simple PASSED                                 [ 96%]
tests/test_skipmesh.py::test_build_and_span_pairs_basic PASSED           [ 97%]
tests/test_skipmesh.py::test_span_coherence_monotonic_with_signal PASSED [ 98%]
tests/test_spans.py::test_minimal_spans_and_scores_present SKIPPED       [100%]

================================== FAILURES ===================================
________ test_index_empty_frames_with_pack_returns_k_and_zero_ingested ________
tests\api\test_frames_index_contracts.py:69: in test_index_empty_frames_with_pack_returns_k_and_zero_ingested
    assert r.status_code == 200, r.text
E   AssertionError: {"detail":"pack_id not found"}
E   assert 400 == 200
E    +  where 400 = <Response [400 Bad Request]>.status_code
---------------------------- Captured stdout setup ----------------------------
2025-08-31 19:59:53,572 INFO coherence.api - create_app: start
2025-08-31 19:59:53,585 INFO coherence.api - App created with config: {'server': {'host': '0.0.0.0', 'port': 8080, 'reload': True}, 'api': {'max_doc_chars': 100000}}
2025-08-31 19:59:53,585 INFO coherence.api - create_app: done in 0.017s
---------------------------- Captured stdout call -----------------------------
2025-08-31 19:59:53,585 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 19:59:53,601 INFO coherence.axis.advanced_builder - Building axis pack from 2 JSON files
2025-08-31 19:59:53,601 DEBUG coherence.axis.advanced_builder -   Encoding 2 positive examples for axis 'a1'...
2025-08-31 19:59:53,624 DEBUG coherence.axis.advanced_builder -   Encoded positive vectors shape: (2, 768)
2025-08-31 19:59:53,624 DEBUG coherence.axis.advanced_builder -   Encoding 2 negative examples for axis 'a1'...
2025-08-31 19:59:53,644 DEBUG coherence.axis.advanced_builder -   Encoded negative vectors shape: (2, 768)
2025-08-31 19:59:53,644 INFO coherence.axis.advanced_builder -   Successfully processed axis: a1 with 2 positive and 2 negative vectors
2025-08-31 19:59:53,644 DEBUG coherence.axis.advanced_builder -   Encoding 2 positive examples for axis 'a2'...
2025-08-31 19:59:53,673 DEBUG coherence.axis.advanced_builder -   Encoded positive vectors shape: (2, 768)
2025-08-31 19:59:53,673 DEBUG coherence.axis.advanced_builder -   Encoding 2 negative examples for axis 'a2'...
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder -   Encoded negative vectors shape: (2, 768)
2025-08-31 19:59:53,695 INFO coherence.axis.advanced_builder -   Successfully processed axis: a2 with 2 positive and 2 negative vectors
2025-08-31 19:59:53,695 INFO coherence.axis.advanced_builder - Successfully processed 2 axes. Building axis pack...
2025-08-31 19:59:53,695 INFO coherence.axis.advanced_builder - Building axis pack from 2 axes
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder - Input vectors for a1:
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder -   Positive: 2 vectors
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder -     Shape: (768,) (first vector)
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder -   Negative: 2 vectors
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder -     Shape: (768,) (first vector)
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder - Input vectors for a2:
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder -   Positive: 2 vectors
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder -     Shape: (768,) (first vector)
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder -   Negative: 2 vectors
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder -     Shape: (768,) (first vector)
2025-08-31 19:59:53,695 INFO coherence.axis.advanced_builder - Inferred embedding dimension D=768
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder - Collecting vectors for whitening...
2025-08-31 19:59:53,695 DEBUG coherence.axis.advanced_builder - Computing whitener over 8 samples, D=768
2025-08-31 19:59:53,853 DEBUG coherence.axis.advanced_builder - Whitener shapes: mu=(768,), W=(768, 768)
2025-08-31 19:59:53,853 INFO coherence.axis.advanced_builder - Starting to process 2 axes...
2025-08-31 19:59:53,854 INFO coherence.axis.advanced_builder - 
================================================================================
2025-08-31 19:59:53,854 INFO coherence.axis.advanced_builder - Processing axis: a1
2025-08-31 19:59:53,854 INFO coherence.axis.advanced_builder - ================================================================================
2025-08-31 19:59:53,866 INFO coherence.axis.advanced_builder - Successfully processed axis: a1
2025-08-31 19:59:53,866 INFO coherence.axis.advanced_builder -   Axis shape: (768,), dtype: float32
2025-08-31 19:59:53,866 INFO coherence.axis.advanced_builder -   Axis norm: 1.0000
2025-08-31 19:59:53,866 INFO coherence.axis.advanced_builder - 
================================================================================
2025-08-31 19:59:53,866 INFO coherence.axis.advanced_builder - Processing axis: a2
2025-08-31 19:59:53,866 INFO coherence.axis.advanced_builder - ================================================================================
2025-08-31 19:59:53,880 INFO coherence.axis.advanced_builder - Successfully processed axis: a2
2025-08-31 19:59:53,880 INFO coherence.axis.advanced_builder -   Axis shape: (768,), dtype: float32
2025-08-31 19:59:53,880 INFO coherence.axis.advanced_builder -   Axis norm: 1.0000
2025-08-31 19:59:53,880 INFO coherence.axis.advanced_builder - Processed 2 axes: ['a1', 'a2']
2025-08-31 19:59:53,880 DEBUG coherence.axis.advanced_builder - Q list length: 2
2025-08-31 19:59:53,880 DEBUG coherence.axis.advanced_builder - Q[0] shape: (768, 1), type: <class 'numpy.ndarray'>
2025-08-31 19:59:53,880 DEBUG coherence.axis.advanced_builder - Q[1] shape: (768, 1), type: <class 'numpy.ndarray'>
2025-08-31 19:59:53,880 INFO coherence.axis.advanced_builder - Stacking 2 axis vectors into Q matrix...
2025-08-31 19:59:53,880 INFO coherence.axis.advanced_builder - Q matrix raw shape: (768, 2)
2025-08-31 19:59:53,880 INFO coherence.axis.advanced_builder - Orthonormalizing Q columns via QR (reduced)...
2025-08-31 19:59:53,880 INFO coherence.axis.advanced_builder - Q^T Q max deviation from I: 3.54e-08
2025-08-31 19:59:53,882 INFO coherence.axis.advanced_builder - Final Q matrix shape: (768, 2)
2025-08-31 19:59:53,882 INFO coherence.axis.advanced_builder - Creating AxisPack with 2 axes: a1, a2
2025-08-31 19:59:53,882 DEBUG coherence.axis.advanced_builder - Q shape: (768, 2), lambda shape: (2,), beta shape: (2,), weights shape: (2,)
2025-08-31 19:59:53,882 DEBUG coherence.axis.pack - Validating AxisPack with k=2
2025-08-31 19:59:53,882 DEBUG coherence.axis.pack - Q shape: (768, 2), ndim: 2
2025-08-31 19:59:53,882 DEBUG coherence.axis.pack - lambda_ shape: (2,), expected: (2,)
2025-08-31 19:59:53,882 DEBUG coherence.axis.pack - beta shape: (2,), expected: (2,)
2025-08-31 19:59:53,882 DEBUG coherence.axis.pack - weights shape: (2,), expected: (2,)
2025-08-31 19:59:53,882 DEBUG coherence.axis.pack - Q.T @ Q shape: (2, 2), expected: (2, 2)
2025-08-31 19:59:53,882 DEBUG coherence.axis.pack - Q.T @ Q diagonal: [1. 1.]
2025-08-31 19:59:53,882 DEBUG coherence.axis.pack - Q.T @ Q off-diagonal max: 3.5390257835388184e-08
2025-08-31 19:59:53,882 INFO coherence.axis.advanced_builder - Successfully validated AxisPack
2025-08-31 19:59:53,882 INFO coherence.axis.advanced_builder - Successfully built axis pack with 2 axes
2025-08-31 19:59:53,882 DEBUG coherence.axis.advanced_builder - Axis pack type: AxisPack
2025-08-31 19:59:53,882 DEBUG coherence.axis.advanced_builder - Axis pack Q matrix shape: (768, 2)
2025-08-31 19:59:53,887 INFO httpx - HTTP Request: POST http://testserver/v1/axes/build "HTTP/1.1 201 Created"
2025-08-31 19:59:53,889 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 19:59:53,891 INFO httpx - HTTP Request: POST http://testserver/v1/frames/index "HTTP/1.1 400 Bad Request"
------------------------------ Captured log call ------------------------------
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/v1/axes/build "HTTP/1.1 201 Created"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/v1/frames/index "HTTP/1.1 400 Bad Request"
_______________________ test_analyze_payload_limit_413 ________________________
tests\api\test_payload_limits.py:16: in test_analyze_payload_limit_413
    assert r.status_code == 413, r.text
E   AssertionError: {"detail":"No axis pack provided and no active pack"}
E   assert 400 == 413
E    +  where 400 = <Response [400 Bad Request]>.status_code
---------------------------- Captured stdout setup ----------------------------
2025-08-31 19:59:54,225 INFO coherence.api - create_app: start
2025-08-31 19:59:54,243 INFO coherence.api - App created with config: {'server': {'host': '0.0.0.0', 'port': 8080, 'reload': True}, 'api': {'max_doc_chars': 100000}}
2025-08-31 19:59:54,243 INFO coherence.api - create_app: done in 0.019s
---------------------------- Captured stdout call -----------------------------
2025-08-31 19:59:54,245 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 19:59:54,255 INFO coherence.axis.advanced_builder - Building axis pack from 2 JSON files
2025-08-31 19:59:54,255 DEBUG coherence.axis.advanced_builder -   Encoding 2 positive examples for axis 'a1'...
2025-08-31 19:59:54,277 DEBUG coherence.axis.advanced_builder -   Encoded positive vectors shape: (2, 768)
2025-08-31 19:59:54,277 DEBUG coherence.axis.advanced_builder -   Encoding 2 negative examples for axis 'a1'...
2025-08-31 19:59:54,300 DEBUG coherence.axis.advanced_builder -   Encoded negative vectors shape: (2, 768)
2025-08-31 19:59:54,300 INFO coherence.axis.advanced_builder -   Successfully processed axis: a1 with 2 positive and 2 negative vectors
2025-08-31 19:59:54,301 DEBUG coherence.axis.advanced_builder -   Encoding 2 positive examples for axis 'a2'...
2025-08-31 19:59:54,327 DEBUG coherence.axis.advanced_builder -   Encoded positive vectors shape: (2, 768)
2025-08-31 19:59:54,327 DEBUG coherence.axis.advanced_builder -   Encoding 2 negative examples for axis 'a2'...
2025-08-31 19:59:54,359 DEBUG coherence.axis.advanced_builder -   Encoded negative vectors shape: (2, 768)
2025-08-31 19:59:54,359 INFO coherence.axis.advanced_builder -   Successfully processed axis: a2 with 2 positive and 2 negative vectors
2025-08-31 19:59:54,359 INFO coherence.axis.advanced_builder - Successfully processed 2 axes. Building axis pack...
2025-08-31 19:59:54,359 INFO coherence.axis.advanced_builder - Building axis pack from 2 axes
2025-08-31 19:59:54,359 DEBUG coherence.axis.advanced_builder - Input vectors for a1:
2025-08-31 19:59:54,359 DEBUG coherence.axis.advanced_builder -   Positive: 2 vectors
2025-08-31 19:59:54,359 DEBUG coherence.axis.advanced_builder -     Shape: (768,) (first vector)
2025-08-31 19:59:54,359 DEBUG coherence.axis.advanced_builder -   Negative: 2 vectors
2025-08-31 19:59:54,359 DEBUG coherence.axis.advanced_builder -     Shape: (768,) (first vector)
2025-08-31 19:59:54,359 DEBUG coherence.axis.advanced_builder - Input vectors for a2:
2025-08-31 19:59:54,359 DEBUG coherence.axis.advanced_builder -   Positive: 2 vectors
2025-08-31 19:59:54,359 DEBUG coherence.axis.advanced_builder -     Shape: (768,) (first vector)
2025-08-31 19:59:54,359 DEBUG coherence.axis.advanced_builder -   Negative: 2 vectors
2025-08-31 19:59:54,359 DEBUG coherence.axis.advanced_builder -     Shape: (768,) (first vector)
2025-08-31 19:59:54,359 INFO coherence.axis.advanced_builder - Inferred embedding dimension D=768
2025-08-31 19:59:54,359 DEBUG coherence.axis.advanced_builder - Collecting vectors for whitening...
2025-08-31 19:59:54,360 DEBUG coherence.axis.advanced_builder - Computing whitener over 8 samples, D=768
2025-08-31 19:59:54,509 DEBUG coherence.axis.advanced_builder - Whitener shapes: mu=(768,), W=(768, 768)
2025-08-31 19:59:54,510 INFO coherence.axis.advanced_builder - Starting to process 2 axes...
2025-08-31 19:59:54,510 INFO coherence.axis.advanced_builder - 
================================================================================
2025-08-31 19:59:54,510 INFO coherence.axis.advanced_builder - Processing axis: a1
2025-08-31 19:59:54,510 INFO coherence.axis.advanced_builder - ================================================================================
2025-08-31 19:59:54,522 INFO coherence.axis.advanced_builder - Successfully processed axis: a1
2025-08-31 19:59:54,522 INFO coherence.axis.advanced_builder -   Axis shape: (768,), dtype: float32
2025-08-31 19:59:54,522 INFO coherence.axis.advanced_builder -   Axis norm: 1.0000
2025-08-31 19:59:54,522 INFO coherence.axis.advanced_builder - 
================================================================================
2025-08-31 19:59:54,522 INFO coherence.axis.advanced_builder - Processing axis: a2
2025-08-31 19:59:54,522 INFO coherence.axis.advanced_builder - ================================================================================
2025-08-31 19:59:54,533 INFO coherence.axis.advanced_builder - Successfully processed axis: a2
2025-08-31 19:59:54,533 INFO coherence.axis.advanced_builder -   Axis shape: (768,), dtype: float32
2025-08-31 19:59:54,533 INFO coherence.axis.advanced_builder -   Axis norm: 1.0000
2025-08-31 19:59:54,533 INFO coherence.axis.advanced_builder - Processed 2 axes: ['a1', 'a2']
2025-08-31 19:59:54,533 DEBUG coherence.axis.advanced_builder - Q list length: 2
2025-08-31 19:59:54,533 DEBUG coherence.axis.advanced_builder - Q[0] shape: (768, 1), type: <class 'numpy.ndarray'>
2025-08-31 19:59:54,533 DEBUG coherence.axis.advanced_builder - Q[1] shape: (768, 1), type: <class 'numpy.ndarray'>
2025-08-31 19:59:54,534 INFO coherence.axis.advanced_builder - Stacking 2 axis vectors into Q matrix...
2025-08-31 19:59:54,534 INFO coherence.axis.advanced_builder - Q matrix raw shape: (768, 2)
2025-08-31 19:59:54,534 INFO coherence.axis.advanced_builder - Orthonormalizing Q columns via QR (reduced)...
2025-08-31 19:59:54,534 INFO coherence.axis.advanced_builder - Q^T Q max deviation from I: 3.54e-08
2025-08-31 19:59:54,534 INFO coherence.axis.advanced_builder - Final Q matrix shape: (768, 2)
2025-08-31 19:59:54,534 INFO coherence.axis.advanced_builder - Creating AxisPack with 2 axes: a1, a2
2025-08-31 19:59:54,534 DEBUG coherence.axis.advanced_builder - Q shape: (768, 2), lambda shape: (2,), beta shape: (2,), weights shape: (2,)
2025-08-31 19:59:54,534 DEBUG coherence.axis.pack - Validating AxisPack with k=2
2025-08-31 19:59:54,534 DEBUG coherence.axis.pack - Q shape: (768, 2), ndim: 2
2025-08-31 19:59:54,534 DEBUG coherence.axis.pack - lambda_ shape: (2,), expected: (2,)
2025-08-31 19:59:54,534 DEBUG coherence.axis.pack - beta shape: (2,), expected: (2,)
2025-08-31 19:59:54,534 DEBUG coherence.axis.pack - weights shape: (2,), expected: (2,)
2025-08-31 19:59:54,534 DEBUG coherence.axis.pack - Q.T @ Q shape: (2, 2), expected: (2, 2)
2025-08-31 19:59:54,534 DEBUG coherence.axis.pack - Q.T @ Q diagonal: [1. 1.]
2025-08-31 19:59:54,534 DEBUG coherence.axis.pack - Q.T @ Q off-diagonal max: 3.5390257835388184e-08
2025-08-31 19:59:54,534 INFO coherence.axis.advanced_builder - Successfully validated AxisPack
2025-08-31 19:59:54,535 INFO coherence.axis.advanced_builder - Successfully built axis pack with 2 axes
2025-08-31 19:59:54,535 DEBUG coherence.axis.advanced_builder - Axis pack type: AxisPack
2025-08-31 19:59:54,535 DEBUG coherence.axis.advanced_builder - Axis pack Q matrix shape: (768, 2)
2025-08-31 19:59:54,539 INFO httpx - HTTP Request: POST http://testserver/v1/axes/build "HTTP/1.1 201 Created"
2025-08-31 19:59:54,540 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 19:59:54,544 INFO httpx - HTTP Request: POST http://testserver/pipeline/analyze "HTTP/1.1 400 Bad Request"
------------------------------ Captured log call ------------------------------
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/v1/axes/build "HTTP/1.1 201 Created"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/pipeline/analyze "HTTP/1.1 400 Bad Request"
_________________ test_calibrate_cli_runs_and_writes_reports __________________
tests\test_calibrate_cli.py:30: in test_calibrate_cli_runs_and_writes_reports
    assert (outdir / "summary.json").exists()
E   AssertionError: assert False
E    +  where False = <bound method Path.exists of WindowsPath('C:/Users/glen4/AppData/Local/Temp/pytest-of-glen4/pytest-19/test_calibrate_cli_runs_and_wr0/reports/calibration:cli-test-pack/summary.json')>()
E    +    where <bound method Path.exists of WindowsPath('C:/Users/glen4/AppData/Local/Temp/pytest-of-glen4/pytest-19/test_calibrate_cli_runs_and_wr0/reports/calibration:cli-test-pack/summary.json')> = (WindowsPath('C:/Users/glen4/AppData/Local/Temp/pytest-of-glen4/pytest-19/test_calibrate_cli_runs_and_wr0/reports/calibration:cli-test-pack') / 'summary.json').exists
______________ TestComprehensiveEthicalAI.test_axis_pack_loading ______________
tests\test_comprehensive_e2e.py:141: in test_axis_pack_loading
    assert response.status_code == 200
E   assert 404 == 200
E    +  where 404 = <Response [404 Not Found]>.status_code
---------------------------- Captured stdout setup ----------------------------
2025-08-31 19:59:57,618 INFO coherence.api - create_app: start
2025-08-31 19:59:57,639 INFO coherence.api - App created with config: {'server': {'host': '0.0.0.0', 'port': 8080, 'reload': True}, 'api': {'max_doc_chars': 100000}}
2025-08-31 19:59:57,640 INFO coherence.api - create_app: done in 0.021s
---------------------------- Captured stdout call -----------------------------
\n\U0001f4ca Testing axis pack loading...\n2025-08-31 19:59:57,641 DEBUG asyncio - Using proactor: IocpProactor\n2025-08-31 19:59:57,705 DEBUG coherence.axis.pack - Validating AxisPack with k=1\n2025-08-31 19:59:57,705 DEBUG coherence.axis.pack - Q shape: (768, 1), ndim: 2\n2025-08-31 19:59:57,705 DEBUG coherence.axis.pack - lambda_ shape: (1,), expected: (1,)\n2025-08-31 19:59:57,705 DEBUG coherence.axis.pack - beta shape: (1,), expected: (1,)\n2025-08-31 19:59:57,705 DEBUG coherence.axis.pack - weights shape: (1,), expected: (1,)\n2025-08-31 19:59:57,705 DEBUG coherence.axis.pack - Q.T @ Q shape: (1, 1), expected: (1, 1)\n2025-08-31 19:59:57,705 DEBUG coherence.axis.pack - Q.T @ Q diagonal: [1.]\n2025-08-31 19:59:57,705 DEBUG coherence.axis.pack - Q.T @ Q off-diagonal max: 0.0\n2025-08-31 19:59:57,721 INFO httpx - HTTP Request: POST http://testserver/v1/axes/create "HTTP/1.1 201 Created"\nCreate axis pack status: 201\n2025-08-31 19:59:57,722 DEBUG asyncio - Using proactor: IocpProactor\n2025-08-31 19:59:57,729 INFO httpx - HTTP Request: GET http://testserver/v1/axes/consequentialism_test "HTTP/1.1 404 Not Found"\nAxis pack response status: 404\nAxis pack response: {"detail":"Pack not found"}
------------------------------ Captured log call ------------------------------
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/v1/axes/create "HTTP/1.1 201 Created"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/v1/axes/consequentialism_test "HTTP/1.1 404 Not Found"
____________ test_rank_prefers_no_veto_then_composite_then_logprob ____________
tests\test_constitution_rank.py:47: in test_rank_prefers_no_veto_then_composite_then_logprob
    assert result["choice"]["text"] in ("A T","AT","A T ")
E   AssertionError: assert 'A' in ('A T', 'AT', 'A T ')
__________________________ test_concurrent_requests ___________________________
tests\test_performance.py:224: in test_concurrent_requests
    assert success_rate >= 0.95, "Success rate below 95% for concurrent requests"
E   AssertionError: Success rate below 95% for concurrent requests
E   assert 0.0 >= 0.95
---------------------------- Captured stdout setup ----------------------------
2025-08-31 20:00:07,723 INFO coherence.api - create_app: start
2025-08-31 20:00:07,749 INFO coherence.api - App created with config: {'server': {'host': '0.0.0.0', 'port': 8080, 'reload': True}, 'api': {'max_doc_chars': 100000}}
2025-08-31 20:00:07,749 INFO coherence.api - create_app: done in 0.026s
---------------------------- Captured stdout call -----------------------------
2025-08-31 20:00:07,751 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,751 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,753 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,753 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,753 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,754 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,755 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,757 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,759 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,765 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,770 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,770 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,773 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,773 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,776 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,777 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,777 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,778 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,779 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,781 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,782 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,782 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,783 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,785 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,786 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,788 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,789 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,791 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,794 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,796 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,796 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,798 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,798 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,800 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,803 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,803 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,805 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,807 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,809 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,809 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,811 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,811 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,811 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,813 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,814 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,816 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,819 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,820 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,821 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,821 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,824 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,824 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,824 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,826 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,827 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,828 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,829 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,831 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,834 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,839 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,840 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,841 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,843 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,844 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,844 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,845 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,846 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,846 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,847 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,850 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,851 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,851 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,857 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,858 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,859 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,859 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,860 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,862 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,863 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,866 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,867 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,867 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,867 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,869 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,872 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,873 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,875 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,875 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,876 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,879 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,879 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,881 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,884 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,888 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,889 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,890 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,890 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,891 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,892 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,892 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,892 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,893 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,893 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,894 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,897 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,897 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,898 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,898 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,899 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,900 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,901 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,901 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,902 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,905 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,905 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,905 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,907 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,908 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,912 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,912 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,913 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,914 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,914 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,915 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,916 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,916 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,917 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,918 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,918 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,920 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,921 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,921 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,921 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,922 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,923 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,923 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,924 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,925 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,927 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,930 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,930 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,931 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,932 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,933 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,934 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,934 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,936 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,937 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,938 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,938 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,939 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,940 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,941 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,941 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,942 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,943 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,944 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,944 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,945 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,946 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,948 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,948 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,951 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,951 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,952 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,954 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,955 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,955 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,955 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,955 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,956 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,957 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,957 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,961 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,962 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,962 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,963 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,964 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,965 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,965 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,967 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,967 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,968 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,968 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,969 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,970 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,970 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,972 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,972 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,974 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,975 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,977 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:07,978 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,978 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,979 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,982 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,982 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,984 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,985 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
2025-08-31 20:00:07,985 INFO httpx - HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"

Concurrent Requests Test (100 requests, 10 concurrent):
Success rate: 0.00%
------------------------------ Captured log call ------------------------------
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 404 Not Found"
__________ TestPerformanceBenchmarks.test_error_recovery_performance __________
tests\test_performance_benchmarks.py:250: in test_error_recovery_performance
    assert response.status_code in [400, 422]
E   assert 200 in [400, 422]
E    +  where 200 = <Response [200 OK]>.status_code
---------------------------- Captured stdout setup ----------------------------
2025-08-31 20:00:12,752 INFO coherence.api - create_app: start
2025-08-31 20:00:12,771 INFO coherence.api - App created with config: {'server': {'host': '0.0.0.0', 'port': 8080, 'reload': True}, 'api': {'max_doc_chars': 100000}}
2025-08-31 20:00:12,771 INFO coherence.api - create_app: done in 0.019s
---------------------------- Captured stdout call -----------------------------
2025-08-31 20:00:12,772 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:12,776 INFO httpx - HTTP Request: POST http://testserver/embed "HTTP/1.1 422 Unprocessable Entity"
2025-08-31 20:00:12,776 DEBUG asyncio - Using proactor: IocpProactor
2025-08-31 20:00:12,794 INFO httpx - HTTP Request: POST http://testserver/embed "HTTP/1.1 200 OK"
------------------------------ Captured log call ------------------------------
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/embed "HTTP/1.1 422 Unprocessable Entity"
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/embed "HTTP/1.1 200 OK"
============================== warnings summary ===============================
tests/test_end_to_end.py::test_embed_endpoint
tests/test_end_to_end.py::test_analyze_endpoint
tests/test_end_to_end.py::test_batch_analysis
tests/test_end_to_end.py::test_batch_analysis
tests/test_end_to_end.py::test_batch_analysis
tests/test_end_to_end.py::test_batch_analysis
tests/test_end_to_end.py::test_batch_analysis
tests/test_end_to_end.py::test_whatif_analysis
  C:\Users\glen4\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\testclient.py:445: DeprecationWarning: You should not use the 'timeout' argument with the TestClient. See https://github.com/encode/starlette/issues/1108 for more information.
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=============================== tests coverage ================================
______________ coverage: platform win32, python 3.12.10-final-0 _______________

Name                                            Stmts   Miss  Cover   Missing
-----------------------------------------------------------------------------
src\coherence\__init__.py                           1      0   100%
src\coherence\agent\__init__.py                     0      0   100%
src\coherence\agent\query_map.py                   20     10    50%   17, 29-38
src\coherence\agent\tools.py                       28     28     0%   1-57
src\coherence\api\__init__.py                       0      0   100%
src\coherence\api\axis_registry.py                140     15    89%   45-46, 66, 68, 71, 73, 76, 86, 88, 121, 130-131, 183, 201-202
src\coherence\api\main.py                          70      4    94%   83-84, 94-95
src\coherence\api\models.py                       100      0   100%
src\coherence\api\routers\__init__.py               0      0   100%
src\coherence\api\routers\analyze.py               85      9    89%   32, 42-45, 51, 63, 65, 118
src\coherence\api\routers\axes.py                  59     20    66%   36-44, 53-54, 71, 88-90, 92-94, 96-98
src\coherence\api\routers\embed.py                 30      4    87%   40-41, 45-46
src\coherence\api\routers\health.py                40     12    70%   24-25, 30-36, 43-44, 47
src\coherence\api\routers\index.py                 12      6    50%   16-21
src\coherence\api\routers\pipeline.py             112     38    66%   88-96, 101, 105, 111-137, 151, 153-154, 171-174
src\coherence\api\routers\resonance.py             95     36    62%   60-73, 89-93, 97, 111-126, 131, 133-134, 144-145
src\coherence\api\routers\search.py                91     79    13%   24-38, 47-148
src\coherence\api\routers\v1_axes.py              282     95    66%   64, 66, 68, 82-152, 164, 172-173, 178-179, 184-186, 188-190, 192-194, 198-205, 212-213, 240-241, 279-280, 288, 293-294, 314, 327-328, 341-342, 395-396, 399-403, 423-424, 454-465, 495-497
src\coherence\api\routers\v1_frames.py            196     43    78%   89-94, 99, 102, 105, 107-111, 116, 119-123, 141, 146-150, 165-174, 188-190, 225-226, 274-275, 282
src\coherence\api\routers\whatif.py                 7      0   100%
src\coherence\axis\__init__.py                      0      0   100%
src\coherence\axis\advanced_builder.py            385    199    48%   41, 56-167, 183-190, 208-275, 324-343, 388, 395-397, 404, 406-419, 448, 450, 458-460, 481, 483, 487-488, 499-501, 506, 513-514, 525-526, 532, 545, 552, 561, 563, 567, 576, 583-587, 620-622, 657-658, 672-674, 677, 689-691, 708-728
src\coherence\axis\builder.py                      53      7    87%   27, 60, 77-80, 111
src\coherence\axis\choquet.py                      22      1    95%   32
src\coherence\axis\pack.py                         87     17    80%   28-32, 38-44, 75, 99-102
src\coherence\cfg\loader.py                        10      0   100%
src\coherence\cfg\logging.py                       12      1    92%   21
src\coherence\coherence\diffusion.py               27      6    78%   33-39
src\coherence\coherence\skipmesh.py                27      1    96%   29
src\coherence\coherence\spans.py                   24     13    46%   27-34, 39-44
src\coherence\coherence\substrate.py               23      0   100%
src\coherence\encoders\__init__.py                  0      0   100%
src\coherence\encoders\registry.py                 14      2    86%   23, 28
src\coherence\encoders\text_sbert.py               87     32    63%   52, 71, 99-135
src\coherence\frames\__init__.py                    0      0   100%
src\coherence\frames\detectors\__init__.py          0      0   100%
src\coherence\frames\detectors\causal.py            0      0   100%
src\coherence\frames\detectors\conditional.py      15     10    33%   24-33
src\coherence\frames\detectors\evidence.py         15     10    33%   24-34
src\coherence\frames\detectors\modality.py          0      0   100%
src\coherence\frames\detectors\negation.py          0      0   100%
src\coherence\frames\detectors\power.py             0      0   100%
src\coherence\frames\detectors\quantifiers.py       0      0   100%
src\coherence\frames\detectors\speech_act.py        0      0   100%
src\coherence\frames\detectors\temporal.py          0      0   100%
src\coherence\frames\logic\__init__.py              0      0   100%
src\coherence\frames\logic\eval.py                 25      0   100%
src\coherence\frames\logic\lf_builder.py            0      0   100%
src\coherence\frames\logic\normalize.py             0      0   100%
src\coherence\frames\schema.py                     21      0   100%
src\coherence\frames\srl_lite.py                   82     26    68%   81-93, 103-113, 118-129
src\coherence\frames\syntax.py                      0      0   100%
src\coherence\frames\vectorize.py                  20      1    95%   20
src\coherence\index\__init__.py                     0      0   100%
src\coherence\index\ann.py                         52     38    27%   16, 20, 24-46, 50-57, 61-74
src\coherence\index\pipeline.py                    83     83     0%   1-131
src\coherence\index\store.py                       51     51     0%   1-64
src\coherence\memory\store.py                      87      7    92%   77-79, 124, 127, 171, 229
src\coherence\metrics\resonance.py                 38      6    84%   34, 49, 65-67, 70
src\coherence\pipeline\orchestrator.py             47     10    79%   87-103
src\coherence\pipeline\scoring.py                  54     20    63%   69, 75-82, 95-102, 110-113
src\ethicalai\__init__.py                           0      0   100%
src\ethicalai\api\axes.py                          63     37    41%   27-65, 69-86, 91, 95-96
src\ethicalai\api\eval.py                          33      2    94%   27, 32
src\ethicalai\api\interaction.py                   45      5    89%   30, 35, 67-74
src\ethicalai\axes\build.py                        14      8    43%   8-15
src\ethicalai\axes\calibrate.py                   124      6    95%   13-14, 39, 60, 90, 95
src\ethicalai\axes\utils.py                        12      0   100%
src\ethicalai\constitution\decoding.py             42      2    95%   22, 24
src\ethicalai\constitution\regularizer.py          26     10    62%   8-9, 31-38
src\ethicalai\encoders.py                          46      9    80%   19, 41, 59-65
src\ethicalai\eval\minspan.py                      11      0   100%
src\ethicalai\eval\spans.py                        24      1    96%   23
src\ethicalai\interaction\explain.py               10      1    90%   6
src\ethicalai\interaction\generate.py               6      0   100%
src\ethicalai\interaction\policy.py                21      1    95%   29
src\ethicalai\types.py                             30      0   100%
-----------------------------------------------------------------------------
TOTAL                                            3236   1022    68%
=========================== short test summary info ===========================
FAILED tests/api/test_frames_index_contracts.py::test_index_empty_frames_with_pack_returns_k_and_zero_ingested - AssertionError: {"detail":"pack_id not found"}
assert 400 == 200
 +  where 400 = <Response [400 Bad Request]>.status_code
FAILED tests/api/test_payload_limits.py::test_analyze_payload_limit_413 - AssertionError: {"detail":"No axis pack provided and no active pack"}
assert 400 == 413
 +  where 400 = <Response [400 Bad Request]>.status_code
FAILED tests/test_calibrate_cli.py::test_calibrate_cli_runs_and_writes_reports - AssertionError: assert False
 +  where False = <bound method Path.exists of WindowsPath('C:/Users/glen4/AppData/Local/Temp/pytest-of-glen4/pytest-19/test_calibrate_cli_runs_and_wr0/reports/calibration:cli-test-pack/summary.json')>()
 +    where <bound method Path.exists of WindowsPath('C:/Users/glen4/AppData/Local/Temp/pytest-of-glen4/pytest-19/test_calibrate_cli_runs_and_wr0/reports/calibration:cli-test-pack/summary.json')> = (WindowsPath('C:/Users/glen4/AppData/Local/Temp/pytest-of-glen4/pytest-19/test_calibrate_cli_runs_and_wr0/reports/calibration:cli-test-pack') / 'summary.json').exists
FAILED tests/test_comprehensive_e2e.py::TestComprehensiveEthicalAI::test_axis_pack_loading - assert 404 == 200
 +  where 404 = <Response [404 Not Found]>.status_code
FAILED tests/test_constitution_rank.py::test_rank_prefers_no_veto_then_composite_then_logprob - AssertionError: assert 'A' in ('A T', 'AT', 'A T ')
FAILED tests/test_performance.py::test_concurrent_requests - AssertionError: Success rate below 95% for concurrent requests
assert 0.0 >= 0.95
FAILED tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_error_recovery_performance - assert 200 in [400, 422]
 +  where 200 = <Response [200 OK]>.status_code
======= 7 failed, 91 passed, 1 skipped, 8 warnings in 194.72s (0:03:14) =======
